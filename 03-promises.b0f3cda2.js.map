{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAASC,SAASC,cAAc,QAChCC,EAAeF,SAASC,cAAc,gBACtCE,EAASH,SAASC,cAAc,eAChCG,EAAWJ,SAASC,cAAc,iBAC1BF,EAAOE,cAAc,UA8BnC,SAASI,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAAKC,GACvB,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WAAYH,EACrBF,EAAI,CAAEH,WAAUC,UAEhBG,EAAI,CAAEJ,WAAUC,S,GACdA,E,IAnCRR,EAAOgB,iBAAiB,UAWxB,SAA6BC,GAC3BA,EAAIC,iBACJ,IAAIC,EAAW,EACXC,EAAQC,OAAOlB,EAAamB,OAChC,IAAIC,EAAE,EAAGA,EAAIF,OAAOhB,EAASiB,OAAQC,GAAI,EACvCH,GAAUC,OAAOjB,EAAOkB,OAExBhB,EADCa,GAAY,EACWC,GAAOI,MAAK,SAAAC,G,IAAGlB,EAAQkB,EAARlB,SAAUC,EAAKiB,EAALjB,MAC/CkB,EAAA5B,GAAS6B,OAAOC,QAAQ,uBAAwCC,OAAftB,EAAS,QAAYsB,OAANrB,EAAM,M,IAEvEsB,OAAM,SAAAL,G,IAAGlB,EAAQkB,EAARlB,SAAUC,EAAKiB,EAALjB,MAClBkB,EAAA5B,GAAS6B,OAAOI,QAAQ,sBAAqCF,OAAftB,EAAS,QAAYsB,OAANrB,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formEl = document.querySelector(\"form\")\nconst firstDelayEl = document.querySelector(\"[name=delay]\");\nconst stepEl = document.querySelector(\"[name=step]\");\nconst amountEl = document.querySelector(\"[name=amount]\");\nconst btnEl = formEl.querySelector(\"button\");\n\nformEl.addEventListener(\"submit\",  onFormPromiceCreate)\n\n// function onFormPromiceCreate(event) {\n//   event.preventDefault();\n//   console.log(firstDelayEl.value);\n//   console.log(stepEl.value);\n//   console.log(amountEl.value);\n// }\n\n\n\nfunction onFormPromiceCreate(evt){\n  evt.preventDefault();\n  let position = 0;\n  let delay = Number(firstDelayEl.value);\n  for(i=0; i < Number(amountEl.value); i +=1) {\n    delay +=  Number(stepEl.value);\n     position += 1;\n    createPromise(position, delay).then(({ position, delay }) => {\n      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });;\n  }\n}\n\n\nfunction createPromise(position, delay) {\n  return new Promise((res, rej) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => { if (shouldResolve) {\n      res({ position, delay });\n         } else {\n      rej({ position, delay });     \n    }}, delay)\n })\n \n}\n\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$formEl","document","querySelector","$ce04d3a99e08e73b$var$firstDelayEl","$ce04d3a99e08e73b$var$stepEl","$ce04d3a99e08e73b$var$amountEl","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","res","rej","shouldResolve","Math","random","setTimeout","addEventListener","evt","preventDefault","position1","delay1","Number","value","i","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.b0f3cda2.js.map"}